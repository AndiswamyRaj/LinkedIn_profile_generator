doctype html
html(lang='en')
    head
        title Profile Generator
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        link(rel='shortcut icon', href='https://bootstraplogos.com/wp-content/uploads/edd/2018/04/logo-1.png')
        link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css')
        link(rel='stylesheet', href='https://fonts.googleapis.com/icon?family=Material+Icons')
        link(href='https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css', rel='stylesheet')
        link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css')
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js')
        script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js')
    body
        .container-fluid.justify-content-align-center.col-lg-8.mt-5
            h2(style='color: #157ace; font-weight: 600') LinkedIn Profile Generator
            form
                .form-group
                    label(style='font-size: x-large', for='fileName') Enter File Name
                    input#fileName.form-control.col-4(type='text', placeholder='File name to get downloaded')
                    br
                    label(style='font-size: x-large', for='teamName') Paste your HTML code
                    textarea#teamName.form-control(style='height: 300px', type='text', placeholder='Paste here', name='rawCode')
                .d-flex.justify-content-end
                    button#dwn-btn.btn.btn-primary(style='font-weight: bold', type='button') Generate
        script.
            function generateArrayProfile() {
            const teamName = document.getElementById('teamName').value;
            const fileNamePrint = document.getElementById('fileName').value;
            var myElemnt = document.createElement('div');
            myElemnt.innerHTML = teamName;
            var profiles = [];
            var elements = myElemnt.getElementsByClassName('search-result');
            for (var element of elements) {
            var profile = {
            image: "",
            name: "",
            pastPosition: "",
            position: "",
            currentPosition: "",
            education: "",
            location: "",
            premiumProfile: ""
            };
            if (
            element.getElementsByClassName('image profile-img')[0] !== undefined &&
            element.getElementsByClassName('image profile-img')[0].src !== ""
            ) {
            profile.image = element.getElementsByClassName('image profile-img')[0].src;
            }
            if (
            element.getElementsByClassName('name')[0] !== undefined &&
            element.getElementsByClassName('name')[0].innerText !== ""
            ) {
            profile.name = element.getElementsByClassName('name')[0].innerText;
            }
            if (
            element.getElementsByClassName('row-content past-positions')[0] !== undefined &&
            element.getElementsByClassName('row-content past-positions')[0].innerText !== ""
            ) {
            profile.pastPosition = element.getElementsByClassName('row-content past-positions')[0].innerText;
            }
            if (
            element.getElementsByClassName('headline')[0] !== undefined &&
            element.getElementsByClassName('headline')[0].innerText !== ""
            ) {
            profile.position = element.getElementsByClassName('headline')[0].innerText;
            }
            if (
            element.getElementsByClassName('location')[0] !== undefined &&
            element.getElementsByClassName('location')[0].innerText !== ""
            ) {
            profile.location = element.getElementsByClassName('location')[0].innerText;
            }
            if (
            element.getElementsByClassName('row-content curr-positions')[0] !== undefined &&
            element.getElementsByClassName('row-content curr-positions')[0].innerText !== ""
            ) {
            profile.currentPosition = element.getElementsByClassName('row-content curr-positions')[0].innerText;
            }
            if (
            element.getElementsByClassName('row-content educations')[0] !== undefined &&
            element.getElementsByClassName('row-content educations')[0].innerText !== ""
            ) {
            profile.education = element.getElementsByClassName('row-content educations')[0].innerText;
            }
            if (
            element.getElementsByTagName('a')[0] !== undefined &&
            element.getElementsByTagName('a')[0].href !== ""
            ) {
            var checking = element.getElementsByTagName('a')[0].href;
            checking = checking.split('file://')[1];
            profile.premiumProfile = `https://linkedin.com${checking}`;
            }
            profiles.push(profile);
            }
            var profileList = '<div class="row">'
            profiles.forEach(function (item) {
            profileList +=
            `<div class="col-lg-4 col-sm-6 col-xs-12"><div class="profile-card js-profile-card"><div class="profile-card__img mt-4"> <img src=${item.image} alt="profile card"></div><div class="profile-card__cnt js-profile-cnt"><div class="profile-card__name"> ${item.name} </div><div class="profile-card__txt"> <strong style="color: #6944ff">Role:</strong> <strong>${item.currentPosition}</strong><br> <strong style="color: #6944ff">Location:</strong> <strong>${item.location}</strong><br> <strong style="color: #6944ff">Past-Position(s): </strong> <strong>${item.pastPosition}</strong><br> <strong style="color: #6944ff">Education:</strong> <strong>${item.education}</strong> <strong></strong> <strong></strong> </div><div class="profile-card-loc"> <span class="profile-card-loc__icon"> <svg class="icon"></svg> </span><span class="profile-card-loc__txt"> </span></div><div class="profile-card-social"><a href="${item.premiumProfile}" target="_blank" style="font-weight: bold; display: inline-block; padding: 10px 15px; color: #fff; background: blue; border-radius: 5px; ">  Go to Profile </a></div></div></div></div>`;
            });
            profileList += '</div>'
            const html =
            `<head><meta charset="UTF-8"><title>Profile Card</title><meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"><link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"><style>@import url("https://fonts.googleapis.com/css?family=Quicksand:400,500,700&subset=latin-ext");body{font-family:'Quicksand',sans-serif;color:#324e63}a,a:hover{text-decoration:none}.icon{display:inline-block;width:1em;height:1em;stroke-width:0;stroke:currentColor;fill:currentColor}.wrapper{padding-top:50px;padding-right:20px;padding-left:20px}.profile-card{max-height: fit-content; box-shadow:0px 8px 60px -10px rgba(13,28,39,0.6);background:#fff;border-radius:12px}.profile-card__img{width:150px;height:150px;margin-left:auto;margin-right:auto;border-radius:50%;overflow:hidden;position:relative;z-index:4;box-shadow:0px 5px 50px 0px #6c44fc, 0px 0px 0px 7px rgba(107, 74, 255, 0.5)}@media screen and (max-width: 576px){.profile-card__img{width:120px;height:120px}}.profile-card__img img{display:block;width:100%;height:100%;object-fit:cover;border-radius:50%}.profile-card__cnt{margin-top:20px;text-align:center;padding:0 20px;padding-bottom:40px;transition:all .3s}.profile-card__name{font-weight:700;font-size:24px;color:#6944ff;margin-bottom:15px}.profile-card__txt{font-size:18px;font-weight:500;color:#324e63;margin-bottom:15px}.profile-card__txt strong{font-size: small; font-weight:700}.profile-card-loc{display:flex;justify-content:center;align-items:center;font-size:18px;font-weight:600}.profile-card-loc__icon{display:inline-flex;font-size:27px;margin-right:10px}</style></head><body><div class="wrapper"><div id="content"> ${profileList}</div></div></body>`;
            var myObj = {
            html: html,
            fileNamePrint: fileNamePrint
            }
            return myObj;
            }
            function download(filename, text) {
            const bl = new Blob([text], {
            type: "text/html"
            });
            const a = document.createElement("a");
            a.href = URL.createObjectURL(bl);
            a.download = filename;
            a.hidden = true;
            document.body.appendChild(a);
            a.click();
            }
            // Start file download.
            document.getElementById("dwn-btn").addEventListener("click", function (event) {
            event.preventDefault();
            var myHtml = generateArrayProfile();
            var filename = myHtml.fileNamePrint + ".html";
            download(filename, myHtml.html);
            }, false);
